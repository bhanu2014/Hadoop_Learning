// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sum.proto

package org.myname.hbase.Coprocessor.autogenerated;

public final class Sum {
  private Sum() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SumRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SumRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string family = 1;</code>
     */
    boolean hasFamily();
    /**
     * <code>required string family = 1;</code>
     */
    java.lang.String getFamily();
    /**
     * <code>required string family = 1;</code>
     */
    com.google.protobuf.ByteString
        getFamilyBytes();

    /**
     * <code>required string column = 2;</code>
     */
    boolean hasColumn();
    /**
     * <code>required string column = 2;</code>
     */
    java.lang.String getColumn();
    /**
     * <code>required string column = 2;</code>
     */
    com.google.protobuf.ByteString
        getColumnBytes();
  }
  /**
   * Protobuf type {@code SumRequest}
   */
  public static final class SumRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SumRequest)
      SumRequestOrBuilder {
    // Use SumRequest.newBuilder() to construct.
    private SumRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SumRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SumRequest defaultInstance;
    public static SumRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SumRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SumRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              family_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              column_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.class, org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SumRequest> PARSER =
        new com.google.protobuf.AbstractParser<SumRequest>() {
      public SumRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SumRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SumRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FAMILY_FIELD_NUMBER = 1;
    private java.lang.Object family_;
    /**
     * <code>required string family = 1;</code>
     */
    public boolean hasFamily() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string family = 1;</code>
     */
    public java.lang.String getFamily() {
      java.lang.Object ref = family_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          family_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string family = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFamilyBytes() {
      java.lang.Object ref = family_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        family_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMN_FIELD_NUMBER = 2;
    private java.lang.Object column_;
    /**
     * <code>required string column = 2;</code>
     */
    public boolean hasColumn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string column = 2;</code>
     */
    public java.lang.String getColumn() {
      java.lang.Object ref = column_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          column_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string column = 2;</code>
     */
    public com.google.protobuf.ByteString
        getColumnBytes() {
      java.lang.Object ref = column_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        column_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      family_ = "";
      column_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFamily()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColumn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFamilyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getColumnBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFamilyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getColumnBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest)) {
        return super.equals(obj);
      }
      org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest other = (org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest) obj;

      boolean result = true;
      result = result && (hasFamily() == other.hasFamily());
      if (hasFamily()) {
        result = result && getFamily()
            .equals(other.getFamily());
      }
      result = result && (hasColumn() == other.hasColumn());
      if (hasColumn()) {
        result = result && getColumn()
            .equals(other.getColumn());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasFamily()) {
        hash = (37 * hash) + FAMILY_FIELD_NUMBER;
        hash = (53 * hash) + getFamily().hashCode();
      }
      if (hasColumn()) {
        hash = (37 * hash) + COLUMN_FIELD_NUMBER;
        hash = (53 * hash) + getColumn().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SumRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SumRequest)
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.class, org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.Builder.class);
      }

      // Construct using org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        family_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        column_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumRequest_descriptor;
      }

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest getDefaultInstanceForType() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.getDefaultInstance();
      }

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest build() {
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest buildPartial() {
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest result = new org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.family_ = family_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.column_ = column_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest) {
          return mergeFrom((org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest other) {
        if (other == org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.getDefaultInstance()) return this;
        if (other.hasFamily()) {
          bitField0_ |= 0x00000001;
          family_ = other.family_;
          onChanged();
        }
        if (other.hasColumn()) {
          bitField0_ |= 0x00000002;
          column_ = other.column_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFamily()) {
          
          return false;
        }
        if (!hasColumn()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object family_ = "";
      /**
       * <code>required string family = 1;</code>
       */
      public boolean hasFamily() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string family = 1;</code>
       */
      public java.lang.String getFamily() {
        java.lang.Object ref = family_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            family_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string family = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFamilyBytes() {
        java.lang.Object ref = family_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          family_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string family = 1;</code>
       */
      public Builder setFamily(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        family_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string family = 1;</code>
       */
      public Builder clearFamily() {
        bitField0_ = (bitField0_ & ~0x00000001);
        family_ = getDefaultInstance().getFamily();
        onChanged();
        return this;
      }
      /**
       * <code>required string family = 1;</code>
       */
      public Builder setFamilyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        family_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object column_ = "";
      /**
       * <code>required string column = 2;</code>
       */
      public boolean hasColumn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string column = 2;</code>
       */
      public java.lang.String getColumn() {
        java.lang.Object ref = column_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            column_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string column = 2;</code>
       */
      public com.google.protobuf.ByteString
          getColumnBytes() {
        java.lang.Object ref = column_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          column_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string column = 2;</code>
       */
      public Builder setColumn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        column_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string column = 2;</code>
       */
      public Builder clearColumn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        column_ = getDefaultInstance().getColumn();
        onChanged();
        return this;
      }
      /**
       * <code>required string column = 2;</code>
       */
      public Builder setColumnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        column_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SumRequest)
    }

    static {
      defaultInstance = new SumRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SumRequest)
  }

  public interface SumResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SumResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 sum = 1 [default = 0];</code>
     */
    boolean hasSum();
    /**
     * <code>required int64 sum = 1 [default = 0];</code>
     */
    long getSum();
  }
  /**
   * Protobuf type {@code SumResponse}
   */
  public static final class SumResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SumResponse)
      SumResponseOrBuilder {
    // Use SumResponse.newBuilder() to construct.
    private SumResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SumResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SumResponse defaultInstance;
    public static SumResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SumResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SumResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sum_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.class, org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<SumResponse> PARSER =
        new com.google.protobuf.AbstractParser<SumResponse>() {
      public SumResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SumResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SumResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SUM_FIELD_NUMBER = 1;
    private long sum_;
    /**
     * <code>required int64 sum = 1 [default = 0];</code>
     */
    public boolean hasSum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 sum = 1 [default = 0];</code>
     */
    public long getSum() {
      return sum_;
    }

    private void initFields() {
      sum_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, sum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse)) {
        return super.equals(obj);
      }
      org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse other = (org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse) obj;

      boolean result = true;
      result = result && (hasSum() == other.hasSum());
      if (hasSum()) {
        result = result && (getSum()
            == other.getSum());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSum()) {
        hash = (37 * hash) + SUM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSum());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SumResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SumResponse)
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.class, org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.Builder.class);
      }

      // Construct using org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sum_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.internal_static_SumResponse_descriptor;
      }

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse getDefaultInstanceForType() {
        return org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance();
      }

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse build() {
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse buildPartial() {
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse result = new org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sum_ = sum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse) {
          return mergeFrom((org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse other) {
        if (other == org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance()) return this;
        if (other.hasSum()) {
          setSum(other.getSum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long sum_ ;
      /**
       * <code>required int64 sum = 1 [default = 0];</code>
       */
      public boolean hasSum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 sum = 1 [default = 0];</code>
       */
      public long getSum() {
        return sum_;
      }
      /**
       * <code>required int64 sum = 1 [default = 0];</code>
       */
      public Builder setSum(long value) {
        bitField0_ |= 0x00000001;
        sum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 sum = 1 [default = 0];</code>
       */
      public Builder clearSum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sum_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SumResponse)
    }

    static {
      defaultInstance = new SumResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SumResponse)
  }

  /**
   * Protobuf service {@code SumService}
   */
  public static abstract class SumService
      implements com.google.protobuf.Service {
    protected SumService() {}

    public interface Interface {
      /**
       * <code>rpc getSum(.SumRequest) returns (.SumResponse);</code>
       */
      public abstract void getSum(
          com.google.protobuf.RpcController controller,
          org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest request,
          com.google.protobuf.RpcCallback<org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new SumService() {
        @java.lang.Override
        public  void getSum(
            com.google.protobuf.RpcController controller,
            org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest request,
            com.google.protobuf.RpcCallback<org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse> done) {
          impl.getSum(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.getSum(controller, (org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc getSum(.SumRequest) returns (.SumResponse);</code>
     */
    public abstract void getSum(
        com.google.protobuf.RpcController controller,
        org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest request,
        com.google.protobuf.RpcCallback<org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.myname.hbase.Coprocessor.autogenerated.Sum.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.getSum(controller, (org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest)request,
            com.google.protobuf.RpcUtil.<org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.myname.hbase.Coprocessor.autogenerated.Sum.SumService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void getSum(
          com.google.protobuf.RpcController controller,
          org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest request,
          com.google.protobuf.RpcCallback<org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.class,
            org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse getSum(
          com.google.protobuf.RpcController controller,
          org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse getSum(
          com.google.protobuf.RpcController controller,
          org.myname.hbase.Coprocessor.autogenerated.Sum.SumRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:SumService)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SumRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SumRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SumResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SumResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tsum.proto\",\n\nSumRequest\022\016\n\006family\030\001 \002(" +
      "\t\022\016\n\006column\030\002 \002(\t\"\035\n\013SumResponse\022\016\n\003sum\030" +
      "\001 \002(\003:\001021\n\nSumService\022#\n\006getSum\022\013.SumRe" +
      "quest\032\014.SumResponseB9\n*org.myname.hbase." +
      "Coprocessor.autogeneratedB\003SumH\001\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SumRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SumRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SumRequest_descriptor,
        new java.lang.String[] { "Family", "Column", });
    internal_static_SumResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SumResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SumResponse_descriptor,
        new java.lang.String[] { "Sum", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
