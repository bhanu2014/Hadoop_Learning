content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="com.java.example.ArraySorter"><rhs name\="com.java.example.ArraySorter"/></lhs><lhs name\="com.java.example.PatientImpl"><rhs name\="com.java.example.PatientImpl"/></lhs><lhs name\="com.java.example.Patient"><rhs name\="com.java.example.Patient"/></lhs><lhs name\="scala.Cloneable"><rhs name\="org.apache.spark.SparkConf"/></lhs><lhs name\="org.apache.spark.Logging"><rhs name\="org.apache.spark.SparkConf"/><rhs name\="org.apache.spark.SparkContext"/><rhs name\="org.apache.spark.sql.SQLContext"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="org.apache.spark.SparkConf"/></lhs><lhs name\="org.apache.spark.SparkConf"><rhs name\="org.apache.spark.SparkConf"/></lhs><lhs name\="org.apache.spark.api.java.JavaSparkContextVarargsWorkaround"><rhs name\="org.apache.spark.api.java.JavaSparkContext"/></lhs><lhs name\="org.apache.spark.api.java.JavaSparkContext"><rhs name\="org.apache.spark.api.java.JavaSparkContext"/></lhs><lhs name\="java.io.Closeable"><rhs name\="org.apache.spark.streaming.api.java.JavaStreamingContext"/><rhs name\="org.apache.spark.api.java.JavaSparkContext"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="org.apache.spark.streaming.api.java.JavaStreamingContext"/><rhs name\="org.apache.spark.api.java.JavaSparkContext"/></lhs><lhs name\="scala.Serializable"><rhs name\="org.apache.spark.streaming.Duration"/><rhs name\="org.apache.spark.streaming.api.java.JavaInputDStream"/><rhs name\="com.cloudera.spark.hbase.JavaHBaseContext"/><rhs name\="org.apache.spark.sql.SQLContext"/><rhs name\="org.apache.spark.sql.types.StructType"/><rhs name\="org.apache.spark.sql.types.StructField"/></lhs><lhs name\="org.apache.spark.sql.SQLContext"><rhs name\="org.apache.spark.sql.SQLContext"/></lhs><lhs name\="scala.Product4"><rhs name\="scala.Tuple4"/></lhs><lhs name\="scala.Product"><rhs name\="scala.Tuple4"/><rhs name\="org.apache.spark.streaming.Duration"/><rhs name\="scala.Tuple2"/><rhs name\="org.apache.spark.sql.types.StructType"/><rhs name\="org.apache.spark.sql.types.StructField"/></lhs><lhs name\="scala.Equals"><rhs name\="scala.Tuple4"/><rhs name\="org.apache.spark.streaming.Duration"/><rhs name\="scala.Tuple2"/><rhs name\="org.apache.spark.sql.types.StructType"/><rhs name\="org.apache.spark.sql.types.StructField"/></lhs><lhs name\="scala.Tuple4"><rhs name\="scala.Tuple4"/></lhs><lhs name\="com.spark.learning.ApacheAccessLog"><rhs name\="com.spark.learning.ApacheAccessLog"/></lhs><lhs name\="scala.Product2"><rhs name\="scala.Tuple2"/></lhs><lhs name\="scala.Tuple2"><rhs name\="scala.Tuple2"/></lhs><lhs name\="java.util.Comparator"><rhs name\="com.spark.learning.FUNCTIONS$ValueComparator"/></lhs><lhs name\="org.apache.spark.sql.api.java.UDFRegistration"><rhs name\="org.apache.spark.sql.api.java.JavaSQLContext"/></lhs><lhs name\="org.apache.spark.sql.api.java.JavaSQLContext"><rhs name\="org.apache.spark.sql.api.java.JavaSQLContext"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="org.apache.hadoop.hbase.HBaseConfiguration"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="org.apache.spark.streaming.api.java.JavaStreamingContext"><rhs name\="org.apache.spark.streaming.api.java.JavaStreamingContext"/></lhs><lhs name\="org.apache.spark.streaming.Duration"><rhs name\="org.apache.spark.streaming.Duration"/></lhs><lhs name\="org.apache.spark.streaming.api.java.JavaDStream"><rhs name\="org.apache.spark.streaming.api.java.JavaInputDStream"/></lhs><lhs name\="org.apache.spark.streaming.api.java.AbstractJavaDStreamLike"><rhs name\="org.apache.spark.streaming.api.java.JavaInputDStream"/></lhs><lhs name\="org.apache.spark.streaming.api.java.JavaDStreamLike"><rhs name\="org.apache.spark.streaming.api.java.JavaInputDStream"/></lhs><lhs name\="org.apache.spark.streaming.api.java.JavaInputDStream"><rhs name\="org.apache.spark.streaming.api.java.JavaInputDStream"/></lhs><lhs name\="com.streaming.cummulativeSum.CountryBean"><rhs name\="com.streaming.cummulativeSum.CountryBean"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.util.concurrent.atomic.AtomicLong"/></lhs><lhs name\="java.util.concurrent.atomic.AtomicLong"><rhs name\="java.util.concurrent.atomic.AtomicLong"/></lhs><lhs name\="org.apache.hadoop.io.Writable"><rhs name\="org.apache.hadoop.hbase.HBaseConfiguration"/></lhs><lhs name\="org.apache.hadoop.conf.Configuration"><rhs name\="org.apache.hadoop.hbase.HBaseConfiguration"/></lhs><lhs name\="com.cloudera.spark.hbase.JavaHBaseContext"><rhs name\="com.cloudera.spark.hbase.JavaHBaseContext"/></lhs><lhs name\="com.spark.hbase.CountryBean"><rhs name\="com.spark.hbase.CountryBean"/></lhs><lhs name\="org.apache.spark.ExecutorAllocationClient"><rhs name\="org.apache.spark.SparkContext"/></lhs><lhs name\="org.apache.spark.SparkContext"><rhs name\="org.apache.spark.SparkContext"/></lhs><lhs name\="org.apache.spark.sql.SQLConf"><rhs name\="org.apache.spark.sql.SQLContext"/></lhs><lhs name\="org.apache.spark.sql.catalyst.dsl.package$ExpressionConversions"><rhs name\="org.apache.spark.sql.SQLContext"/></lhs><lhs name\="org.apache.spark.sql.UDFRegistration"><rhs name\="org.apache.spark.sql.SQLContext"/></lhs><lhs name\="scala.collection.Seq"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.PartialFunction"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.Iterable"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenSeq"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.Function1"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.Traversable"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenIterable"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.TraversableLike"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenTraversable"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.generic.HasNewBuilder"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.generic.FilterMonadic"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.TraversableOnce"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenTraversableLike"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenTraversableOnce"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.Parallelizable"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenIterableLike"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="scala.collection.GenSeqLike"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="org.apache.spark.sql.types.DataType"><rhs name\="org.apache.spark.sql.types.StructType"/><rhs name\="org.apache.spark.sql.types.StringType"/></lhs><lhs name\="org.apache.spark.sql.types.StructType"><rhs name\="org.apache.spark.sql.types.StructType"/></lhs><lhs name\="org.apache.spark.sql.types.StructField"><rhs name\="org.apache.spark.sql.types.StructField"/></lhs></history>
content_assist_number_of_computers=19
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
markOccurrences=false
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Courier New|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier New;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
