<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.ipc.BlockingRpcCallback"/>
<fullyQualifiedTypeName name="org.myname.hbase.Coprocessor.autogenerated.Sum.SumResponse"/>
<fullyQualifiedTypeName name="com.google.protobuf.ServiceException"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="org.apache.hadoop.conf.Configuration"/>
<fullyQualifiedTypeName name="sample.javaNew.example.LamdaExp.MathOperation"/>
<fullyQualifiedTypeName name="sample.javaNew.example.LamdaExp"/>
<fullyQualifiedTypeName name="java.util.logging.Logger"/>
<fullyQualifiedTypeName name="java.util.regex.Pattern"/>
<fullyQualifiedTypeName name="java.util.regex.Matcher"/>
<fullyQualifiedTypeName name="java.util.logging.Level"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="scala.runtime.StringFormat"/>
<fullyQualifiedTypeName name="com.spark.loganalyser.ApacheAccessLog"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.lang.Long"/>
<fullyQualifiedTypeName name="io.netty.util.internal.chmv8.ConcurrentHashMapV8.Fun"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.function.Function2"/>
<fullyQualifiedTypeName name="java.util.Comparator"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="java.lang.Boolean"/>
<fullyQualifiedTypeName name="com.spark.learning.FUNCTIONS.ValueComparator"/>
<fullyQualifiedTypeName name="parquet.it.unimi.dsi.fastutil.longs.LongComparator"/>
<fullyQualifiedTypeName name="com.google.common.base.Functions"/>
<fullyQualifiedTypeName name="com.spark.learning.FUNCTIONS"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.api.java.JavaSQLContext"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.api.java.JavaSchemaRDD"/>
<fullyQualifiedTypeName name="scala.Tuple4"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.api.java.Row"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.SQLContext"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.DataFrame"/>
<fullyQualifiedTypeName name="com.spark.learning.ApacheAccessLog"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.Row"/>
<fullyQualifiedTypeName name="scala.Tuple2"/>
<fullyQualifiedTypeName name="scala.Function"/>
<fullyQualifiedTypeName name="akka.japi.Function"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.function.Function"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.function.PairFunction"/>
<fullyQualifiedTypeName name="scala.collection.parallel.ParIterableLike.Collect"/>
<fullyQualifiedTypeName name="java.lang.Runnable"/>
<fullyQualifiedTypeName name="java.io.PrintStream"/>
<fullyQualifiedTypeName name="java.io.FileOutputStream"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.io.FileWriter"/>
<fullyQualifiedTypeName name="java.io.PrintWriter"/>
<fullyQualifiedTypeName name="java.util.StringTokenizer"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="sample.javaNew.example.CountryBean"/>
<fullyQualifiedTypeName name="org.apache.spark.SparkConf"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.JavaSparkContext"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaStreamingContext"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.Duration"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaInputDStream"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaReceiverInputDStream"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaDStream"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.JavaRDD"/>
<fullyQualifiedTypeName name="com.spark.streaming.CountryBean"/>
</qualifiedTypeNameHistroy>
